import { Projects } from "@/types/projects";

export const projects: Projects[] = [
  {
    title: "구글폼 클론코딩",
    intro: "구글 폼 클론코딩 프로젝트입니다.",
    description:
      "구글 설문조사(google-form)를 클론코딩한 프로젝트입니다. 원하는 질문과 옵션으로 설문지를 생성하고, 미리 볼 수 있습니다. 또한 직접 만든 설문지를 사용해 볼 수 있습니다.",
    points: [
      "MUI를 활용하여 구글 설문조사 페이지 퍼블리싱.",
      "질문 추가, 수정, 삭제 및 드래그앤드랍을 통한 순서 변경 기능. ",
      "만든 설문지를 미리 사용하고 제출 응답을 볼 수 있는 기능 구현.",
      "Redux와 RTK를 사용한 설문지, 질문 카드, 입력 데이터 상태 전역 관리.",
      "redux-persist를 사용하여 질문 데이터를 로컬스토리지에 저장하여 브라우저 새로고침을 해도 입력한 질문 데이터가 유지되도록 구현.",
    ],
    startDate: "2023-12-02",
    endDate: "2023-12-11",
    category: ["personal", "front"],
    path: "google-form",
    featured: true,
    stacks: [
      "react",
      "typescript",
      "styledComponents",
      "redux",
      "vercel",
      "mui",
    ],
    githubUrl: "https://github.com/eeeyooon/google-form",
    docsUrl: "",
    serviceUrl: "https://google-form-eeeyooon.vercel.app/",
    images: 1,
  },
  {
    title: "지뢰찾기 게임",
    intro: "지뢰찾기 게임 프로젝트입니다.",
    description:
      "지뢰찾기 게임을 구현한 프로젝트입니다. 지뢰가 있는 Cell을 모두 찾거나, 혹은 지뢰가 없는 Cell을 모두 열면 승리하는 게임입니다.",
    points: [
      "깊이 우선 탐색(DFS)를 활용한 지뢰찾기 알고리즘 적용.",
      "난이도 선택  혹은 사용자가 입력한 행*열 크기, 지뢰 개수에 맞는 커스텀 난이도 보드 생성 기능.",
      "셀 클릭 시 인접한 셀 8칸의 지뢰 개수 표시",
      "인접한 셀 중 지뢰가 없을 때, 그 인접한 셀 모두 열리는 재귀호출 로직 생성.",
      "Redux와 RTK를 사용한 지뢰찾기 게임 상태 전역 관리.",
      "redux-persist를 사용하여 redux의 store를 통해 관리되는 state를 로컬스토리지에 저장하여 새로 고침을 하여도 사용자가 선택한 난이도가 유지되도록 설정함.",
    ],
    startDate: "2023-12-07",
    endDate: "2023-12-11",
    category: ["personal", "front"],
    path: "minesweeper-game",
    featured: true,
    stacks: ["react", "styledComponents", "typescript", "redux", "vercel"],
    githubUrl: "https://github.com/eeeyooon/minesweeper-game",
    docsUrl: "",
    serviceUrl: "https://yoon-minesweeper.vercel.app/",
    images: 1,
  },
  {
    title: "일있수꽝?",
    intro: "제주 농어업자 및 외국인 근로자 매칭 플랫폼",
    description:
      " 제주 농어업자 및 외국인 근로자 매칭 플랫폼입니다. 카카오맵 API를 활용하여 근로장 위치를 표시하고, 구인 글 작성 및 마감 관리를 할 수 있습니다.",
    points: [
      "프론트엔드 기술환경 세팅 및 전체 화면과 기능 구현.",
      "카카오 API를 사용하여 우편번호 검색, 카카오맵 지도 활용 기능 구현.",
      "Axios의 인스턴스를 활용하여 네트워크 요청 모듈화",
      "백엔드 개발자와 api 명세서 작성 및 데이터 관리 논의",
      "디자이너와 디자인 가이드 작성 및 공통 컴포넌트 분리.",
      "백엔드 개발자, 디자이너, 기획자 등 다양한 개발 직군과의 협업 경험 및 해당 직군의 업무 이해도 향상시킴.",
      "노션을 활용하여 일정 및 업무 공유와 관리의 효율성을 높임.",
      "주제에 적합한 기획과 높은 완성도로 최우수상 수상.",
    ],
    startDate: "2023-09-13",
    endDate: "2023-09-15",
    category: ["team", "front"],
    path: "jeju-brokerage",
    featured: true,
    stacks: ["react", "styledComponents", "axios", "spring"],
    githubUrl: "https://github.com/goormthon/frontend",
    docsUrl:
      "https://www.notion.so/eeeyooon/7436eeea62724ae1bbc26bce91980b50?pvs=4",
    serviceUrl: "",
    images: 1,
  },
  {
    title: "Cafe-in",
    intro: "카페 운영 관리 및 메뉴 주문 서비스",
    description:
      "카페 운영 관리 및 메뉴 주문 서비스입니다.사용자는 메뉴 조회 및 메뉴 주문, 대기 신청이 가능하며, 관리자는 메뉴 관리, 대기 관리, 주문 관리, 매출 내역·포인트내역 등을 조회할 수 있습니다.",
    points: [
      "Recoli 을 사용하여 대기 등록 현황 및 대기 상태 등 필요한 상태 전역 관리.",
      "파이어베이스의 Firestore를 연동시켜 서비스의 모든 데이터들을 관리함.",
      "StyledComponents의 theme를 활용하여 다크모드 구현 및 다양한 색상의 테마모드 기능 구현.",
      "색상 대비율 적용, 탭 접근성 향상, aria-label 활용 등으로 웹 접근성 개선.",
      "불필요한 렌더링이 발생하는 코드에 메모이제이션을 작업하여 성능 점수 95점 이상으로 개선시킴 (Lighthouse 퍼포먼스 점수 기준)",
      "Gitflow, 커밋 컨벤션, PR 컨벤션 등 협업 가이드 라인을 생성 및 정기적인 스프린트 진행.",
      "Github의 이슈, 마일스톤, 위키를 활용하여 일정관리 및 가이드 문서 공유.",
      "처음 타입스크립트를 사용해보며 타입 시스템의 편리함을 느끼고, 타입 스크립트의 장점을 활용할 수 있게 됨.",
    ],
    startDate: "2023-07-16",
    endDate: "2023-08-22",
    category: ["team", "front"],
    path: "cafe-in",
    featured: true,
    stacks: ["react", "typescript", "styledComponents", "recoil", "firebase"],
    githubUrl: "https://github.com/Cafe-Manage-Service-CAFE-IN/cafe-in",
    docsUrl: "https://github.com/Cafe-Manage-Service-CAFE-IN/cafe-in/wiki",
    serviceUrl: "https://cafe-in.web.app/",
    images: 1,
  },
  {
    title: "Car-zip",
    intro: "차의 집! 주차장 정보 아카이빙 웹 서비스",
    description:
      "차의 집! 주차장 정보 아카이빙 웹 서비스입니다. 근처에 있는 주차장을 지도로 확인하고, 주차장의 다양한 정보를 조회할 수 있습니다.",
    points: [
      "주차장 리뷰 페이지 화면 및 CRUD 기능 개발.",
      "파이어베이스 파이어스토어를 연결하여 서비스에 필요한 데이터 관리.",
      "사용자가 작성한 리뷰만 마이페이지에서 띄워주고 수정 및 삭제 구현.",
      "팀 그라운드 룰, 브랜치 전략, 코딩 컨벤션, 커밋 컨벤션 등을 정리하고 데일리 스크럼, 위클리 스크럼을 포함한 회의록을 작성함.",
    ],
    startDate: "2023-03-05",
    endDate: "2023-03-29",
    category: ["team", "front"],
    path: "car-zip",
    featured: false,
    stacks: ["react", "styledComponents", "firebase"],
    githubUrl: "https://github.com/LikeLion-FE-Final-Project03/car-zip",
    docsUrl: "https://github.com/LikeLion-FE-Final-Project03/car-zip/wiki",
    serviceUrl: "",
    images: 1,
  },
  {
    title: "마켓칼리",
    intro: "마켓컬리 바닐라 JS 클론코딩",
    description: "마켓 컬리를 바닐라 JS로 클론코딩한 프로젝트입니다.",
    points: [
      "적절한 헤딩 및 시맨틱 마크업을 사용하여 논리적인 구조를 구성함.",
      "swiper.js를 사용하여 이벤트 빅 배너, 상품 목록 등 슬라이더를 구현함",
      '쿠키를 사용하여 "팝업창 오늘안보기"를 클릭하면 해당 날짜에는 팝업창이 보지이 않게 구현함',
      "fetch를 사용하여 json 파일에서 상품 데이터를 동적으로 가져와 렌더링함",
      "최근 본 상품 데이터를 로컬스토리지에 저장하여 관리함",
      "대체 텍스트 제공, 탭 접근성, wai-aria를 설정하여 웹 접근성을 향상시킴.",
      "Git Flow 방식을 사용하여 협업 효율성을 높임",
      "Wiki를 사용하여 전체 일정 관리 및 회의록 공유, 그 외 팀 규칙과 컨벤션등을 기록함",
    ],
    startDate: "2023-01-27",
    endDate: "2023-02-07",
    category: ["team", "front"],
    path: "market-karly",
    featured: false,
    stacks: ["javascript"],
    githubUrl: "https://github.com/sm022/marketkarly",
    docsUrl: "https://github.com/sm022/marketkarly/wiki",
    serviceUrl: "",
    images: 1,
  },
  {
    title: "My Todo",
    intro: "간단한 TodoList앱",
    description:
      "Axios 실습 및 원티드 프리온보딩 FE 인턴십 과제 연습용 투두 리스트 서비스입니다. 원티드에서 제공하는 API 통신을 사용하였습니다. 조건에 따라 cra, 기능 구현에 상관없는 라이브러리만 사용하였습니다.",
    points: [
      "서비스 디자인",
      "API 통신을 통한 회원가이바 로그인 기능 구현 및 유효성 검사 처리 구현",
      "API 통신을 통한 할 일 추가, 수정, 삭제 기능 구현",
      "Axios의 인스턴스를 활용한 네트워크 요청 모듈화",
    ],
    startDate: "2023-09-16",
    endDate: "2023-09-26",
    category: ["personal", "front"],
    path: "my-todo",
    featured: false,
    stacks: ["react", "typescript", "styledComponents", "axios", "firebase"],
    githubUrl: "https://github.com/eeeyooon/MyTodo",
    docsUrl: "",
    serviceUrl: "https://eeeyooon-todo.web.app/",
    images: 1,
  },
  {
    title: "감정일기장",
    intro: "일상과 그 날의 감정을 기록하는 일기장",
    description:
      "하루의 일상과 그날 느낀 감정을 함께 기록하는 나만의 감정 일기장입니다. 기존 버전의 일기장에 카카오 소셜 로그인, 파이어베이스 DB 연동하여 개선시킨 것이 최신 버전(리빌딩)입니다.",
    points: [
      "상태 관리 라이브러리는 불필요하다는 판단 하에, Props Drilling을 방지하기 위해 Context API를 사용함.",
      "useReducer를 사용하여 상태 관련 로직을 분리하고, 재사용성을 높임.",
      "useSearchParams를 사용한 쿼리 스트링 활용",
      "React-Developer-Tools를 활용하여 연산이 낭비되고 있거나, 최적화가 안되어 있는 부분을 체크하고 최적화 작업을 진행함",
      "카카오 로그인 API를 사용하여 간편한 소셜 로그인 기능 구현.",
      "github actions를 사용하여 CI 워크플로우 구축.",
      "suspense, lazy.loading을 사용하여 리소스 용량 절감 및 TTI, FCP 속도 개선.",
    ],
    startDate: "2023-09-15",
    endDate: "2023-10-02",
    category: ["personal", "front"],
    path: "emotion-diary",
    featured: true,
    stacks: ["react", "firebase", "kakao"],
    githubUrl: "https://github.com/eeeyooon/Rebuild-EmotionDiary",
    docsUrl:
      "https://eeeyooon.notion.site/b4286d82d0e74826a974d4873e7f72b3?pvs=74",
    serviceUrl: "https://eeeyooon-emotion-diary.web.app/",
    images: 3,
  },
];
